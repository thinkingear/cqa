# Generated by Django 4.1.7 on 2023-04-09 14:30

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('qa', '0001_initial'),
        ('account', '0001_initial'),
        ('pubedit', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AnswerComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('feed', models.TextField()),
                ('answer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='qa.answer')),
                ('poster', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_posted', to='account.user')),
            ],
            options={
                'ordering': ['created'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ArticleComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('feed', models.TextField()),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='pubedit.article')),
                ('poster', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_posted', to='account.user')),
            ],
            options={
                'ordering': ['created'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CommentComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('feed', models.TextField()),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='comment.commentcomment')),
                ('poster', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_posted', to='account.user')),
            ],
            options={
                'ordering': ['created'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='QuestionComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('feed', models.TextField()),
                ('poster', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_posted', to='account.user')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='qa.question')),
            ],
            options={
                'ordering': ['created'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='QuestionCommentVote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vote', models.IntegerField()),
                ('questionComment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='comment.questioncomment')),
                ('voter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.user')),
            ],
        ),
        migrations.CreateModel(
            name='CommentCommentVote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vote', models.IntegerField()),
                ('commentComment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='comment.commentcomment')),
                ('voter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.user')),
            ],
        ),
        migrations.CreateModel(
            name='ArticleCommentVote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vote', models.IntegerField()),
                ('articleComment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='comment.articlecomment')),
                ('voter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.user')),
            ],
        ),
        migrations.CreateModel(
            name='AnswerCommentVote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vote', models.IntegerField()),
                ('answerComment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='comment.answercomment')),
                ('voter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.user')),
            ],
        ),
        migrations.AddConstraint(
            model_name='questioncommentvote',
            constraint=models.UniqueConstraint(fields=('voter', 'questionComment'), name='questionComment_voter'),
        ),
        migrations.AddConstraint(
            model_name='commentcommentvote',
            constraint=models.UniqueConstraint(fields=('voter', 'commentComment'), name='commentComment_voter'),
        ),
        migrations.AddConstraint(
            model_name='articlecommentvote',
            constraint=models.UniqueConstraint(fields=('voter', 'articleComment'), name='articleComment_voter'),
        ),
        migrations.AddConstraint(
            model_name='answercommentvote',
            constraint=models.UniqueConstraint(fields=('voter', 'answerComment'), name='answerComment_voter'),
        ),
    ]
