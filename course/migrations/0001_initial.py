# Generated by Django 4.1.7 on 2023-04-18 06:35

from django.db import migrations, models
import django.db.models.deletion
import tinymce.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('account', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(default='', max_length=128)),
                ('thumbnail', models.ImageField(upload_to='thumbnails/')),
                ('description', models.TextField(blank=True, null=True)),
                ('overview', tinymce.models.HTMLField(blank=True, null=True)),
                ('visibility', models.CharField(choices=[('private', 'Private'), ('public', 'Public')], default='private', max_length=10)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128)),
                ('ordering', models.PositiveIntegerField(default=0)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sections', to='course.course')),
            ],
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=128)),
                ('description', models.TextField(blank=True, null=True)),
                ('ordering', models.PositiveIntegerField(default=0)),
                ('video_file', models.FileField(null=True, upload_to='videos/')),
                ('views', models.PositiveIntegerField(default=0)),
                ('review_status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=10)),
                ('poster', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_posted', to='account.user')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='videos', to='course.section')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CourseFollower',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='course.course')),
                ('follower', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.user')),
            ],
        ),
        migrations.AddField(
            model_name='course',
            name='followers',
            field=models.ManyToManyField(related_name='followed_courses', through='course.CourseFollower', to='account.user'),
        ),
        migrations.AddField(
            model_name='course',
            name='poster',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_posted', to='account.user'),
        ),
        migrations.AddConstraint(
            model_name='coursefollower',
            constraint=models.UniqueConstraint(fields=('follower', 'course'), name='course_follower'),
        ),
    ]
